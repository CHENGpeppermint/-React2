{"version":3,"sources":["Homework1-Todolist/Input.js","Homework1-Todolist/List.js","Homework2-route/Home.js","Homework1-Todolist/TodoList.js","pages/Hoc.js","components/Control.js","pages/context.js","Homework2-route/Header.js","Homework2-route/Core.js","Homework2-route/Guide.js","Homework2-route/Api.js","Homework2-route/Hooks.js","Homework2-route/Doc.js","Homework2-route/Tuto.js","Homework2-route/Blog.js","Homework2-route/Comm.js","Homework2-route/Login.js","router.config.js","pages/Mytab.js","App1.js","index.js"],"names":["Input","props","value","inpValue","type","onChange","handleChange","onClick","addTodo","List","arr1","length","renderTodos","arr2","Home","Component","console","log","style","textAlign","history","push","withFetch","Com","url","Topic","state","data","fetch","then","res","json","setState","this","displayName","name","dangerouslySetInnerHTML","__html","content","map","item","title","React","createContext","Header","activeClassName","exact","to","Core","Guide","Api","Hooks","withRouter","useHistory","location","useLocation","par","useParams","mat","useRouteMatch","useEffect","localStorage","getItem","pathname","className","path","component","Tuto","Blog","Comm","Login","setItem","replace","routes","Doc","pri","PrivateRoute","rest","render","RouteWithSubRoutes","route","App1","ReactDOM","document","getElementById","method","headers"],"mappings":"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","file":"static/js/main.03544d7c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = (props)=>{\r\n    return <div>\r\n     <input \r\n        value={props.inpValue} \r\n        type=\"text\" \r\n        onChange={props.handleChange}\r\n     />\r\n       <button onClick={props.addTodo}>添加</button>\r\n    </div>\r\n}\r\nexport default Input;\r\n      ","import React from 'react';\r\n\r\nconst List = (props)=>{\r\n    return <div>\r\n                <h2>正在进行{props.arr1.length}</h2>\r\n                <ul>\r\n                    {props.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成{props.arr2.length}</h2>\r\n                <ul>\r\n                    {props.renderTodos(true)}\r\n                </ul>\r\n    </div>\r\n}\r\nexport default List;","import React from 'react'\r\n\r\nconst Home = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript 库</p>\r\n            <div>\r\n                <button onClick={\r\n                    ()=>props.history.push('/doc')\r\n                }>快速开始</button>\r\n                <button onClick={\r\n                    ()=>props.history.push('/tuto')\r\n                }>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n// import React,{Component} from 'react';\r\n// import List from '../components/List';\r\n// import Buttons from '../components/Buttons';\r\n\r\n// class Home extends Component{\r\n//     constructor(props){\r\n//       super(props);\r\n//       this.state = {\r\n//         data:[]\r\n//       }\r\n//       // this.handleClick = this.handleClick.bind(this)\r\n//     }\r\n//     componentDidMount(){\r\n//       fetch('https://cnodejs.org/api/v1/topics')\r\n//       .then(res=>res.json())\r\n//       .then( ({data}) => {\r\n//         this.setState({data})\r\n//       })\r\n//     }\r\n//     getData = (page)=>{\r\n//       fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n//       .then(res=>res.json())\r\n//       .then( ({data}) => {\r\n//         this.setState({data})\r\n//       })\r\n//     }\r\n//     render(){\r\n//       const { data } = this.state;\r\n//       return <div>\r\n//         <Buttons getData={this.getData}/>\r\n//         <List data={data}/>\r\n//       </div>\r\n//     }\r\n// }\r\n// //默认导出（当前文件只能默认导出一个，不能写两个export）\r\n// export default Home;\r\n// // // 命名导出\r\n// // let a = 100;\r\n// // export {Home}\r\n// // export {a}\r\n// //命名导出\r\n// // export {Home}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\n\r\n\r\n// 组件名首字母一定要大写\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter( item => !item.done)\r\n        let arr2 = todos.filter( item => item.done)\r\n        // console.log(arr1);\r\n        return (\r\n            <div className=\"box\">\r\n                <Input inpValue={inpValue} addTodo={this.addTodo} handleChange={this.handleChange}/>\r\n                <List addTodo={this.addTodo} arr1={arr1} arr2={arr2} renderTodos={this.renderTodos}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","// higher order component\r\nimport React, { Component } from 'react';\r\n\r\nconst withFetch = (Com,url)=>{\r\n    class Topic extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com {...this.props} data={this.state.data}/>\r\n        }\r\n    }\r\n    Topic.displayName= `withFetch(${Com.name})`\r\n    return Topic;\r\n}\r\n\r\nconst De = (props)=>{\r\n    return <div>\r\n        <h1>标题{props.name}</h1>\r\n        <div dangerouslySetInnerHTML={\r\n            {__html:props.data.content}}\r\n        >\r\n        </div>\r\n    </div>\r\n}\r\nexport const Detail = withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\nconst Ho = (props)=>{\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n    </ul>\r\n}\r\nconst Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics')\r\nexport default Hoc;","import React, { Component } from 'react';\r\nimport './control.css';\r\n\r\n\r\n// 组件名首字母一定要大写\r\nclass Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({todos:newTodos});\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n        // setState 是异步执行的，注意callback的用法\r\n        // this.setState({\r\n        //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        // },()=>{\r\n        //     localStorage.setItem(\r\n        //         'todos',\r\n        //         JSON.stringify(this.state.todos)\r\n        //     )\r\n        // });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter( item => !item.done)\r\n        // console.log(arr1);\r\n        return (\r\n            <div className=\"box\">\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                    id='inp'\r\n                    ref={inp=>this.input = inp}\r\n                    value={inpValue} \r\n                    type=\"text\" \r\n                    onChange={this.handleChange}\r\n                />\r\n                <button onClick={this.addTodo}>添加</button>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul style={{color:3<2?'red':'green'}}>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;\r\n\r\n// 条件渲染\r\n// {\r\n//     3>21\r\n//     ?<button>登录</button>\r\n//     :<span>hello</span>\r\n// }\r\n\r\n// <button>{2>3?'登录':'注册'}</button>","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Core = () => {\r\n    return (\r\n        <div>\r\n            Core\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Core","import React from 'react'\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <div>\r\n            Guide\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guide","import React from 'react'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <div>\r\n            Api\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n    return (\r\n        <div>\r\n            Hooks\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hooks","import React,{useEffect} from 'react'\r\nimport Core from './Core'\r\nimport Guide from './Guide'\r\nimport Api from './Api'\r\nimport Hooks from './Hooks'\r\nimport {NavLink, Route, Redirect,\r\n    useHistory,\r\n    useLocation,\r\n    useParams,\r\n    useRouteMatch,\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport './doc.css'\r\nimport {NavBar,Icon} from 'antd-mobile'\r\n// const DocContent = (props)=>{\r\n\r\n//     return <h1>\r\n//         {props.match.params.type}\r\n//     </h1>\r\n// }\r\nconst Doc = (props) => {\r\n    console.log(props)\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const par = useParams();\r\n    const mat = useRouteMatch();\r\n    console.log(history);\r\n    console.log(location);\r\n    console.log(par);\r\n    console.log(mat);\r\n    useEffect(()=>{\r\n        if(!localStorage.getItem('userinfo')){\r\n            props.history.push({\r\n                pathname:'/login',\r\n                state:props.location\r\n            })\r\n        }\r\n    },[])\r\n    return (\r\n        <div className='doc'>\r\n            {/* <NavBar\r\n                mode=\"light\"\r\n                icon={ <Icon type=\"left\" /> }\r\n                onLeftClick={ () => console.log('onLeftClick') }\r\n                rightContent={ [\r\n                    <Icon key=\"0\" type=\"search\" style={ { marginRight: '16px' } } />,\r\n                    <Icon key=\"1\" type=\"ellipsis\" />,\r\n                ] }\r\n            >NavBar</NavBar> */}\r\n            <div className=\"content\">\r\n                <Route path='/doc/core' component={Core}></Route>\r\n                <Route path='/doc/guide' component={Guide}></Route>\r\n                <Route path='/doc/api' component={Api}></Route>\r\n                <Route path='/doc/hooks' component={Hooks}></Route>\r\n                {/* 嵌套路由 */}\r\n                {/* <Route path='/doc/:type' component={DocContent}/>\r\n                <Redirect from='/doc' to='/doc/core'/> */}\r\n            </div>\r\n            <ol>\r\n                <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n                <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                <li><NavLink to='/doc/api'>API</NavLink></li>\r\n                <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter( Doc );","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog;","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    const login = ()=>{\r\n        localStorage.setItem('userinfo','tom')\r\n        props.history.replace(props.location.state)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import Home from './Homework2-route/Home';\r\nimport Doc from './Homework2-route/Doc';\r\nimport Tuto from './Homework2-route/Tuto';\r\nimport Blog from './Homework2-route/Blog';\r\nimport Comm from './Homework2-route/Comm';\r\nimport Login from './Homework2-route/Login';\r\nimport Core from './Homework2-route/Core';\r\nimport Guide from './Homework2-route/Guide';\r\nimport Api from './Homework2-route/Api';\r\nimport Hooks from './Homework2-route/Hooks';\r\n// import DocContent from './pages/DocContent';\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/doc',\r\n        component: Doc,\r\n        pri: true,\r\n        routes: [\r\n            {\r\n                path: '/doc/core',\r\n                component: Core,\r\n                \r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide,\r\n            },\r\n            {\r\n                path:'doc/api',\r\n                component:Api,\r\n            },\r\n            {\r\n                path:'doc/hooks',\r\n                component:Hooks,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '/tuto',\r\n        component: Tuto,\r\n        pri: true\r\n    },\r\n    {\r\n        path: '/blog',\r\n        component: Blog\r\n    },\r\n    {\r\n        path: '/comm',\r\n        component: Comm\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n]\r\nexport default routes;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\nimport Header from '../Homework2-route/Header';\r\nimport Home from '../Homework2-route/Home';\r\nimport Doc from '../Homework2-route/Doc';\r\nimport Tuto from '../Homework2-route/Tuto';\r\nimport Blog from '../Homework2-route/Blog';\r\nimport Comm from '../Homework2-route/Comm';\r\nimport Login from '../Homework2-route/Login';\r\n\r\nimport {Button,TabBar} from 'antd-mobile'\r\nclass Mytab extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\tselectedTab: 'redTab',\r\n\t  };\r\n\t}\r\n\trender() {\r\n\t  return (\r\n\t\t<div style={{ position: 'fixed', height: '100%', width: '100%', top: 0 }}>\r\n\t\t  <TabBar\r\n\t\t\tunselectedTintColor=\"#949494\"\r\n\t\t\ttintColor=\"#33A3F4\"\r\n\t\t\tbarTintColor=\"white\"\r\n\t\t  >\r\n\t\t\t<TabBar.Item\r\n\t\t\t  title=\"Life\"\r\n\t\t\t  key=\"Life\"\r\n\t\t\t  icon={<div style={{\r\n\t\t\t\twidth: '22px',\r\n\t\t\t\theight: '22px',\r\n\t\t\t\tbackground: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t  />\r\n\t\t\t  }\r\n\t\t\t  selectedIcon={<div style={{\r\n\t\t\t\twidth: '22px',\r\n\t\t\t\theight: '22px',\r\n\t\t\t\tbackground: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t  />\r\n\t\t\t  }\r\n\t\t\t  selected={this.state.selectedTab === 'blueTab'}\r\n\t\t\t  badge={1}\r\n\t\t\t  onPress={() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  selectedTab: 'blueTab',\r\n\t\t\t\t});\r\n\t\t\t  }}\r\n\t\t\t  data-seed=\"logId\"\r\n\t\t\t>\r\n\t\t\t  首页\r\n\t\t\t</TabBar.Item>\r\n\r\n\t\t\t<TabBar.Item\r\n\t\t\t  icon={\r\n\t\t\t\t<div style={{\r\n\t\t\t\t  width: '22px',\r\n\t\t\t\t  height: '22px',\r\n\t\t\t\t  background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t\t/>\r\n\t\t\t  }\r\n\t\t\t  selectedIcon={\r\n\t\t\t\t<div style={{\r\n\t\t\t\t  width: '22px',\r\n\t\t\t\t  height: '22px',\r\n\t\t\t\t  background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t\t/>\r\n\t\t\t  }\r\n\t\t\t  title=\"Koubei\"\r\n\t\t\t  key=\"Koubei\"\r\n\t\t\t  badge={'new'}\r\n\t\t\t  selected={this.state.selectedTab === 'redTab'}\r\n\t\t\t  onPress={() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  selectedTab: 'redTab',\r\n\t\t\t\t});\r\n\t\t\t  }}\r\n\t\t\t  data-seed=\"logId1\"\r\n\t\t\t>\r\n\t\t\t\t<Button onClick={()=>{\r\n                    this.props.history.push('/doc')\r\n                }}type='primary'>click</Button>\r\n\t\t\t  文档页\r\n\t\t\t</TabBar.Item>\r\n\r\n\t\t\t<TabBar.Item\r\n\t\t\t  icon={\r\n\t\t\t\t<div style={{\r\n\t\t\t\t  width: '22px',\r\n\t\t\t\t  height: '22px',\r\n\t\t\t\t  background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t\t/>\r\n\t\t\t  }\r\n\t\t\t  selectedIcon={\r\n\t\t\t\t<div style={{\r\n\t\t\t\t  width: '22px',\r\n\t\t\t\t  height: '22px',\r\n\t\t\t\t  background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat' }}\r\n\t\t\t\t/>\r\n\t\t\t  }\r\n\t\t\t  title=\"Friend\"\r\n\t\t\t  key=\"Friend\"\r\n\t\t\t  dot\r\n\t\t\t  selected={this.state.selectedTab === 'greenTab'}\r\n\t\t\t  onPress={() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  selectedTab: 'greenTab',\r\n\t\t\t\t});\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  教程\r\n\t\t\t</TabBar.Item>\r\n\r\n\t\t\t<TabBar.Item\r\n\t\t\t  icon={{ uri: 'https://zos.alipayobjects.com/rmsportal/asJMfBrNqpMMlVpeInPQ.svg' }}\r\n\t\t\t  selectedIcon={{ uri: 'https://zos.alipayobjects.com/rmsportal/gjpzzcrPMkhfEqgbYvmN.svg' }}\r\n\t\t\t  title=\"My\"\r\n\t\t\t  key=\"my\"\r\n\t\t\t  selected={this.state.selectedTab === 'yellowTab'}\r\n\t\t\t  onPress={() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  selectedTab: 'yellowTab',\r\n\t\t\t\t});\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  社区页\r\n\t\t\t</TabBar.Item>\r\n\r\n\t\t  </TabBar>\r\n\t\t</div>\r\n\t  );\r\n\t}\r\n  }\r\n\r\n  export default Mytab;","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\nimport Header from './Homework2-route/Header';\r\nimport Home from './Homework2-route/Home';\r\nimport Doc from './Homework2-route/Doc';\r\nimport Tuto from './Homework2-route/Tuto';\r\nimport Blog from './Homework2-route/Blog';\r\nimport Comm from './Homework2-route/Comm';\r\nimport Login from './Homework2-route/Login';\r\nimport {Button,TabBar} from 'antd-mobile'\r\nimport Mytab from './pages/Mytab';\r\nimport routes from './router.config.js';\r\n\r\n// const App1=()=>{\r\n// \treturn <Router>\r\n// \t\t<Switch>\r\n// \t\t\t<Route exact path='/' component={Mytab} />\r\n// \t\t\t<Route path='/doc' component={Doc} />\r\n// \t\t</Switch>\r\n// \t</Router>\r\n// }\r\n\r\n// // 路由基本配置\r\n// // 路由传参(以及获取参数-props)\r\n// // 动态路由(/:page)\r\n// // js跳转\r\n// // 权限路由\r\n// // npm i antd-mobile --registry https://\r\n\r\nfunction PrivateRoute({ component: Com, ...rest }) {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{ ...rest }\r\n\t\t\trender={ ({ location }) =>\r\n\t\t\t\tlocalStorage.getItem('userinfo')\r\n\t\t\t\t\t? <Com {...rest}/>\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\t\tto={ {\r\n\t\t\t\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\t\t\t\tstate: location\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction RouteWithSubRoutes(route) {\r\n\tif(route.pri){\r\n\t\treturn <PrivateRoute {...route}/>\r\n\t}\r\n\treturn (\r\n\t  <Route\r\n\t\tpath={route.path}\r\n\t\trender={props => (\r\n\t\t  // pass the sub-routes down to keep nesting\r\n\t\t  <route.component {...props} routes={route.routes} />\r\n\t\t)}\r\n\t  />\r\n\t);\r\n  }\r\n\r\nconst App1 = () => {\r\n\treturn <Router>\r\n\t\t<Header />\r\n\t\t<Switch>\r\n\t\t\t{/* home组件这种配置方式会在\r\n\t\t\tHome组件的props内注入四个属性\r\n\t\t\t */\r\n\t\t\t\r\n\t\t\t    routes.map(route=>{\r\n\t\t\t\t\treturn <RouteWithSubRoutes{...route} />\r\n\t\t\t\t})\r\n\t\t\t }\r\n\r\n\t\t</Switch>\r\n\t</Router>\r\n}\r\n\r\n\r\n// import {Button} from 'antd-mobile'\r\n// const App1=()=>{\r\n// \treturn <div>\r\n// \t\t<Button type=\"primary\">开始使用</Button>\r\n// \t</div>\r\n// }\r\n// class App1 extends React.Component{\r\n// \tconstructor(props){\r\n// \t\tsuper\r\n// \t}\r\n// }\r\n\r\n\r\n\r\nexport default App1;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './Homework1-Todolist/TodoList';\nimport Home from './Homework2-route/Home';\nimport Control from './components/Control';\n// import Demo01 from './pages/Demo01';\nimport App from './pages/App';\nimport Hoc,{Detail} from './pages/Hoc';\nimport Hook from './pages/Hook'\nimport Context from './pages/context'\nimport App1 from './App1'\nimport 'antd-mobile/dist/antd-mobile.css';\n\n\nReactDOM.render(\n  <App1 />,\n  document.getElementById('root')\n);\n\nlet url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\nfetch(url, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n})\n.then(res=>res.json())\n.then(res=>console.log(res))\n\n// 实现带有本地存储的todolist功能（类组件实现）：\n\n// 最外层index.js里render(<TodoList/>,xx)\n// TodoList组件里包含Input和List两个组件\n// 输入框输入时不进行本地存储（使用componentDidUpdate）\n\n// 写完进行npm run build,将打包完的静态传到github，\n// 设置github pages，雪梨提交网页链接和四个文件的代码\n\n\n\n\n\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L \n\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       console.log(prop)\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n\n\n\n\n  // 1、原生JS，DOM操作（jQ）\n  // 2、React：开发效率高、性能高\n  // 3、环境搭建、创建一个项目、运行\n  // 4、JSX语法\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}